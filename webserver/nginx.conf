user nginx;
worker_processes 4;

error_log /var/log/nginx/error.log notice;

events {
	worker_connections 1024;
	#multi_accept on;
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_tokens off;

	#server_names_hash_bucket_size 64;
	#server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format vhosts '$host $remote_addr - $remote_user [$time_local] "$request" '
	                  '$status $body_bytes_sent "$http_referer" '
	                  '"$http_user_agent" "$http_x_forwarded_for"';
	access_log /var/log/nginx/access.log vhosts;

	# Content compression
	gzip on;
	gzip_disable "msie6";
	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/atom+xml;

	# Improved SSL settings, see https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
	# Test SSL security: https://www.ssllabs.com/ssltest/analyze.html?d=developer.zargony.com&hideResults=on
	ssl_ciphers kEECDH+ECDSA+AES128:kEECDH+ECDSA+AES256:kEECDH+AES128:kEECDH+AES256:kEDH+AES128:kEDH+AES256:DES-CBC3-SHA:+SHA:!aNULL:!eNULL:!LOW:!kECDH:!DSS:!MD5:!EXP:!PSK:!SRP:!CAMELLIA:!SEED;
	ssl_dhparam /var/www/certs/dhparam.pem;
	ssl_prefer_server_ciphers on;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_session_cache shared:SSL:512k;

	# Reverse proxy settings
	proxy_redirect off;
	proxy_set_header Host $http_host;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Forwarded-Ssl $https;
	proxy_set_header X-Real-IP $remote_addr;

	# Default server serves status 403
	server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name _;
		return 403;
	}

	# zargony.com Blog
	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		server_name zargony.com ipv4.zargony.com ipv6.zargony.com;
		ssl on;
		ssl_certificate /var/www/certs/www.zargony.com.pem;
		ssl_certificate_key /var/www/certs/www.zargony.com.key;
		add_header Strict-Transport-Security "max-age=31536000";
		root /var/www/blog;
		try_files $uri $uri/index.html $uri.html =404;
		error_page 404 /404.html;

		# Tell clients to cache static files for 24h
		location ~* ^.+\.(jpg|jpeg|gif|bmp|ico|png|css|js|swf|ttf|woff|eot|svg)$ {
			expires 24h;
		}
	}
	server {
		listen 80;
		listen [::]:80;
		server_name .zargony.com .zargony.de;
		return 301 https://zargony.com$request_uri;
	}

	# Charmer website
	server {
		listen 80;
		listen [::]:80;
		server_name charmer.zargony.com;
		root /var/www/charmer;
		try_files $uri $uri/index.html $uri.html =404;
		#error_page 404 /404.html;

		# Tell clients to cache static files for 24h
		location ~* ^.+\.(jpg|jpeg|gif|bmp|ico|png|css|js|swf|ttf|woff|eot|svg)$ {
			expires 24h;
		}

		location = / {
			# Rewrite requests from Facebook bots to localized index page
			if ($http_user_agent ~* facebookexternalhit) {
				set $lang en;
			}
			if ($http_x_facebook_locale) {
				set $lang en;
			}
			if ($http_x_facebook_locale ~* ^(en|de)) {
				set $lang $1;
			}
			if ($arg_fb_locale) {
				set $lang en;
			}
			if ($arg_fb_locale ~* ^(en|de)) {
				set $lang $1;
			}
			if ($lang) {
				#return 302 $scheme://$host/$lang;
				rewrite ^ /$lang last;
			}

			# Redirect clients to the localized index page
			if ($http_accept_language ~* (en|de)) {
				return 302 $scheme://$host/$1;
			}
			return 302 $scheme://$host/en;
		}
	}

	# Owncloud
	upstream @owncloud {
		server owncloud:80;
	}
	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		server_name cloud.zargony.com;
		ssl on;
		ssl_certificate /var/www/certs/cloud.zargony.com.pem;
		ssl_certificate_key /var/www/certs/cloud.zargony.com.key;
		add_header Strict-Transport-Security "max-age=31536000";
		client_max_body_size 129M;
		location / {
			proxy_pass http://@owncloud;
		}
	}
	server {
		listen 80;
		listen [::]:80;
		server_name cloud.zargony.com;
		return 301 https://$host$request_uri;
	}

	# Developer
	upstream @gitlab {
		server gitlab:8181;
	}
	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		server_name developer.zargony.com;
		ssl on;
		ssl_certificate /var/www/certs/developer.zargony.com.pem;
		ssl_certificate_key /var/www/certs/developer.zargony.com.key;
		add_header Strict-Transport-Security "max-age=31536000";
		location / {
			proxy_pass http://@gitlab;
		}
	}
	server {
		listen 80;
		listen [::]:80;
		server_name developer.zargony.com;
		return 301 https://$host$request_uri;
	}
}

stream {
	# GitLab SSH
	upstream @gitlab {
		server gitlab:22;
	}
	server {
		listen 2222;

		proxy_pass @gitlab;
	}
}
